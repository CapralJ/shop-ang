{"version":3,"sources":["src/app/admin/add-page/add-page.component.html","src/app/admin/dashboard-page/dashboard-page.component.html","src/app/admin/edit-page/edit-page.component.html","src/app/admin/login-page/login-page.component.html","src/app/admin/orders-page/orders-page.component.html","src/app/admin/shared/admin-layout/admin-layout.component.html","src/app/admin/add-page/add-page.component.scss","src/app/admin/add-page/add-page.component.ts","src/app/admin/admin.module.ts","src/app/admin/dashboard-page/dashboard-page.component.scss","src/app/admin/dashboard-page/dashboard-page.component.ts","src/app/admin/edit-page/edit-page.component.scss","src/app/admin/edit-page/edit-page.component.ts","src/app/admin/login-page/login-page.component.scss","src/app/admin/login-page/login-page.component.ts","src/app/admin/orders-page/orders-page.component.scss","src/app/admin/orders-page/orders-page.component.ts","src/app/admin/shared/admin-layout/admin-layout.component.scss","src/app/admin/shared/admin-layout/admin-layout.component.ts","src/app/shared/auth.guard.ts","src/app/shared/search.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <h2 class=\\\"text-center\\\">Add product</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Type</label>\\n        <select formControlName=\\\"type\\\">\\n            <option value=\\\"Phone\\\">Phone</option>\\n            <option value=\\\"Tablet\\\">Tablet</option>\\n            <option value=\\\"Laptop\\\">Laptop</option>\\n        </select>\\n        <div *ngIf=\\\"form.get('type').touched && form.get('type').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('type').errors.required\\\">Chose product type</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"title\\\">Name</label>\\n        <input id=\\\"title\\\" type=\\\"title\\\" formControlName=\\\"title\\\">\\n        <div *ngIf=\\\"form.get('title').touched && form.get('title').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('title').errors.required\\\">Enter product name</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Photo:</label>\\n        <quill-editor formControlName=\\\"photo\\\"></quill-editor>\\n       \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Information:</label>\\n        <quill-editor formControlName=\\\"info\\\"></quill-editor>\\n      \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"price\\\">Price</label>\\n        <input id=\\\"price\\\" type=\\\"price\\\" formControlName=\\\"price\\\">\\n        <div *ngIf=\\\"form.get('price').touched && form.get('price').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('price').errors.required\\\">Enter product price</small>\\n        </div>\\n    </div>\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"form.invalid || submitted\\\">Add</button>\\n    \\n\\n</form>\"","export default \"<div *ngIf=\\\"products.length; else loading\\\">\\n    <h2 class=\\\"text-center\\\">Dashboard of products</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Find a product...\\\" [(ngModel)]=\\\"productName\\\">\\n    </div>\\n\\n    <table>\\n        <thead>\\n            <tr>\\n                <th>ID</th>\\n                <th>Name</th>\\n                <th>Price</th>\\n                <th>Date of creation</th>\\n                <th>Open</th>\\n                <th>Delete</th>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr *ngFor=\\\"let product of products | search : productName ; let idx = index\\\">\\n                <td>{{ idx + 1 }}</td>\\n                <td>{{ product.title }}</td>\\n                <td>{{ product.price }}</td>\\n                <td>{{ product.date | date : 'short'}}</td>\\n                <td>\\n                    <button class=\\\"btn btn-dark\\\" [routerLink]=\\\"['/admin','product',product.id,'edit']\\\">Open</button>\\n                </td>\\n                <td>\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"remove(product.id)\\\">Delete</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<ng-template #loading>\\n    <p class=\\\"text-center\\\">Loading...</p>\\n</ng-template>\"","export default \"<div *ngIf=\\\"form; else loading\\\">\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <h2 class=\\\"text-center\\\">Update product</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Type</label>\\n        <select formControlName=\\\"type\\\">\\n            <option value=\\\"Phone\\\">Phone</option>\\n            <option value=\\\"Tablet\\\">Tablet</option>\\n            <option value=\\\"Laptop\\\">Laptop</option>\\n        </select>\\n        <div *ngIf=\\\"form.get('type').touched && form.get('type').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('type').errors.required\\\">Chose product type</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"title\\\">Name</label>\\n        <input id=\\\"title\\\" type=\\\"title\\\" formControlName=\\\"title\\\">\\n        <div *ngIf=\\\"form.get('title').touched && form.get('title').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('title').errors.required\\\">Enter product name</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Photo:</label>\\n        <quill-editor formControlName=\\\"photo\\\"></quill-editor>\\n       \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Information:</label>\\n        <quill-editor formControlName=\\\"info\\\"></quill-editor>\\n      \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"price\\\">Price</label>\\n        <input id=\\\"price\\\" type=\\\"price\\\" formControlName=\\\"price\\\">\\n        <div *ngIf=\\\"form.get('price').touched && form.get('price').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('price').errors.required\\\">Enter product price</small>\\n        </div>\\n    </div>\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"form.invalid || submitted\\\">Update</button>\\n    \\n\\n</form>\\n</div>\\n\\n<ng-template #loading>\\n    <p class=\\\"text-center\\\">Loading...</p>\\n</ng-template>\"","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <h2>Login as administrator</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input id=\\\"email\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\n        <div *ngIf=\\\"form.get('email').touched && form.get('email').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('email').errors.required\\\">Enter Email</small>\\n            <small *ngIf=\\\"form.get('email').errors.email\\\">Enter valid Email</small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n        <div *ngIf=\\\"form.get('password').touched && form.get('password').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('password').errors.required\\\">Enter Password</small>\\n            <small *ngIf=\\\"form.get('password').errors.minlength\\\">\\n                Passwor must be at least  {{form.get('password').errors.minlength.requiredLength}} characters. \\n                Now he {{form.get('password').errors.minlength.actualLength}}\\n            </small>\\n        </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"form.inalid || submitted\\\">Logon</button>\\n    \\n\\n</form>\"","export default \"<div *ngIf=\\\"orders.length; else noOrders\\\">\\n    <h2 class=\\\"text-center\\\">Table of orders:</h2>\\n\\n    <table>\\n        <thead>\\n            <tr>\\n                <th>Date</th>\\n                <th>Phone</th>\\n                <th>Name</th>\\n                <th>Address</th>\\n                <th>Products</th>\\n                <th>Price</th>\\n                <th>Status</th>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr *ngFor=\\\"let order of orders\\\">\\n                <td>{{ order.date | date : 'medium' }}</td>\\n                <td>{{ order.phone }}</td>\\n                <td>{{ order.name }}</td>\\n                <td>{{ order.address }}</td>\\n                <td>\\n                    <div *ngFor=\\\"let product of order.orders\\\">{{ product.title }}</div>\\n                </td>\\n                <td>\\n                    <div class=\\\"text-center\\\">{{ order.price }}$</div>\\n                    <div class=\\\"text-center\\\">{{ order.payment }}</div>\\n                </td>\\n                <td>\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"remove(order.id)\\\">Complited</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<ng-template #noOrders>\\n    <p class=\\\"text-center\\\">No orders...</p>\\n</ng-template>\"","export default \"<nav class=\\\"navbar bg-dark\\\">\\n    <h1>\\n        <a routerLink=\\\"/\\\">Online Shop</a>\\n    </h1>\\n\\n    <ul *ngIf=\\\"auth.isAuthenticated(); else login\\\">\\n        <li routerLinkActive=\\\"active\\\">\\n            <a [routerLink]=\\\"['/admin','dashboard']\\\">Dashboard</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n            <a [routerLink]=\\\"['/admin','add']\\\">Add product</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n            <a [routerLink]=\\\"['/admin','orders']\\\">Orders</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n            <a href=\\\"#\\\" (click)=\\\"logout($event)\\\">Logout</a>\\n        </li>\\n    </ul>\\n\\n    <ng-template #login>\\n        <ul>\\n            <li routerLinkActive=\\\"active\\\">\\n                <a [routerLink]=\\\"['/admin','login']\\\">Login</a>\\n            </li>\\n        </ul>\\n    </ng-template>\\n\\n</nav>\\n\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkZC1wYWdlL2FkZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-page',\n  templateUrl: './add-page.component.html',\n  styleUrls: ['./add-page.component.scss']\n})\nexport class AddPageComponent implements OnInit {\n\n  form: FormGroup\n  submitted = false\n\n  constructor(\n    private productServ: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      type: new FormControl(null, Validators.required),\n      title: new FormControl(null, Validators.required),\n      photo: new FormControl(null, Validators.required),\n      info: new FormControl(null, Validators.required),\n      price: new FormControl(null, Validators.required),\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    const product = {\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }\n\n    console.log(this.form)\n    this.productServ.create(product).subscribe( res => {\n      this.form.reset()\n      this.submitted = false\n      this.router.navigate(['/'])\n    })\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminLayoutComponent } from './shared/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { AddPageComponent } from './add-page/add-page.component';\r\nimport { OrdersPageComponent } from './orders-page/orders-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { AuthGuard } from '../shared/auth.guard';\r\nimport { QuillModule } from 'ngx-quill'\r\nimport { SearchPipe } from '../shared/search.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminLayoutComponent,\r\n        LoginPageComponent,\r\n        DashboardPageComponent,\r\n        AddPageComponent,\r\n        EditPageComponent,\r\n        OrdersPageComponent,\r\n        SearchPipe,\r\n\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        QuillModule.forRoot(),\r\n        RouterModule.forChild([\r\n            {\r\n                path: '', component: AdminLayoutComponent, children: [\r\n                    {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n                    {path: 'login', component: LoginPageComponent},\r\n                    {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'add', component: AddPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'orders', component: OrdersPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n                ]\r\n            }\r\n        ])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AdminModule{\r\n    \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC1wYWdlL2Rhc2hib2FyZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit {\n\n  products = []\n  pSub: Subscription\n  rSub: Subscription;\n  productName;\n\n  constructor(\n    private productServ: ProductService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.productServ.getAll().subscribe( products => {\n      console.log(products)\n      this.products = products\n    })\n  }\n\n  ngOnDesroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe()\n    }\n\n    if (this.rSub) {\n      this.rSub.unsubscribe()\n    }\n  }\n\n  remove (id) {\n    this.rSub = this.productServ.remove(id).subscribe( () => {\n      this.products = this.products.filter( product => product.id !== id)\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2VkaXQtcGFnZS9lZGl0LXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { switchMap } from 'rxjs/operators';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.scss']\n})\nexport class EditPageComponent implements OnInit {\n\n  form : FormGroup\n  product: Product\n  submitted = false\n\n  constructor(\n    private route: ActivatedRoute,\n    private productServ: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.pipe(\n      switchMap( params => {\n        return this.productServ.getById(params['id'])\n      })\n    ).subscribe(product => {\n      this.product = product\n      this.form = new FormGroup({\n        type: new FormControl(this.product.type, Validators.required),\n      title: new FormControl(this.product.title, Validators.required),\n      photo: new FormControl(this.product.photo, Validators.required),\n      info: new FormControl(this.product.info, Validators.required),\n      price: new FormControl(this.product.price, Validators.required),\n      })\n\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    this.productServ.update({\n      ...this.product,\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }).subscribe( res => {\n      this.submitted = false\n      this.router.navigate(['/admin','dashboard'])\n    })\n  }\n}\n","export default \"form {\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbG9naW4tcGFnZS9EOlxcQW5ndWxhX2FwcFxcMVxcT25saW5lLXNob3Avc3JjXFxhcHBcXGFkbWluXFxsb2dpbi1wYWdlXFxsb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9sb2dpbi1wYWdlL2xvZ2luLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGNBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59IiwiZm9ybSB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    public auth: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\n     });\n  }\n\n  submit() {\n    if (  this.form.invalid ) {\n      return;\n    }\n\n    this.submitted = true;\n\n    const user = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    };\n\n    this.auth.login(user).subscribe( res => {\n      console.log(res);\n      this.form.reset;\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n\n    }, () => {\n      this.submitted = false;\n    }\n\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL29yZGVycy1wYWdlL29yZGVycy1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-orders-page',\n  templateUrl: './orders-page.component.html',\n  styleUrls: ['./orders-page.component.scss']\n})\nexport class OrdersPageComponent implements OnInit {\n\n  orders = []\n  pSub: Subscription\n  rSub: Subscription\n\n\n  constructor(\n    private orderServ: OrderService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.orderServ.getAll().subscribe( orders => {\n      this.orders = orders\n    })\n  }\n\n  ngOnDesroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe()\n    }\n\n    if (this.rSub) {\n      this.rSub.unsubscribe()\n    }\n  }\n\n  remove (id) {\n    this.rSub = this.orderServ.remove(id).subscribe( () => {\n      this.orders = this.orders.filter( order => order.id !== id)\n    })\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NoYXJlZC9hZG1pbi1sYXlvdXQvYWRtaW4tbGF5b3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor(\n    public auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout($event) {\n    event.preventDefault()\n    this.auth.logout()\n    this.router.navigate(['/admin','login'])\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.auth.isAuthenticated()) {\n      return true;\n    } else {\n      this.auth.logout()\n      this.router.navigate(['/admin', 'login'])\n    }\n     \n  }\n  \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './interfaces';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(products: Product[], productName = ''): any {\n    if (!productName.trim()) {\n      return products\n    }\n\n    return products.filter( product => {\n      return product.title.toLowerCase().includes(productName.toLowerCase())\n    })\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"admin-admin-module-es5.js"}