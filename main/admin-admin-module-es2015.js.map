{"version":3,"sources":["./src/app/admin/add-page/add-page.component.html","./src/app/admin/dashboard-page/dashboard-page.component.html","./src/app/admin/edit-page/edit-page.component.html","./src/app/admin/login-page/login-page.component.html","./src/app/admin/orders-page/orders-page.component.html","./src/app/admin/shared/admin-layout/admin-layout.component.html","./src/app/admin/add-page/add-page.component.scss","./src/app/admin/add-page/add-page.component.ts","./src/app/admin/admin.module.ts","./src/app/admin/dashboard-page/dashboard-page.component.scss","./src/app/admin/dashboard-page/dashboard-page.component.ts","./src/app/admin/edit-page/edit-page.component.scss","./src/app/admin/edit-page/edit-page.component.ts","./src/app/admin/login-page/login-page.component.scss","./src/app/admin/login-page/login-page.component.ts","./src/app/admin/orders-page/orders-page.component.scss","./src/app/admin/orders-page/orders-page.component.ts","./src/app/admin/shared/admin-layout/admin-layout.component.scss","./src/app/admin/shared/admin-layout/admin-layout.component.ts","./src/app/shared/auth.guard.ts","./src/app/shared/search.pipe.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <h2 class=\\\"text-center\\\">Add product</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Type</label>\\n        <select formControlName=\\\"type\\\">\\n            <option value=\\\"Phone\\\">Phone</option>\\n            <option value=\\\"Tablet\\\">Tablet</option>\\n            <option value=\\\"Laptop\\\">Laptop</option>\\n        </select>\\n        <div *ngIf=\\\"form.get('type').touched && form.get('type').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('type').errors.required\\\">Chose product type</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"title\\\">Name</label>\\n        <input id=\\\"title\\\" type=\\\"title\\\" formControlName=\\\"title\\\">\\n        <div *ngIf=\\\"form.get('title').touched && form.get('title').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('title').errors.required\\\">Enter product name</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Photo:</label>\\n        <quill-editor formControlName=\\\"photo\\\"></quill-editor>\\n       \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Information:</label>\\n        <quill-editor formControlName=\\\"info\\\"></quill-editor>\\n      \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"price\\\">Price</label>\\n        <input id=\\\"price\\\" type=\\\"price\\\" formControlName=\\\"price\\\">\\n        <div *ngIf=\\\"form.get('price').touched && form.get('price').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('price').errors.required\\\">Enter product price</small>\\n        </div>\\n    </div>\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"form.invalid || submitted\\\">Add</button>\\n    \\n\\n</form>\"","export default \"<div *ngIf=\\\"products.length; else loading\\\">\\n    <h2 class=\\\"text-center\\\">Dashboard of products</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Find a product...\\\" [(ngModel)]=\\\"productName\\\">\\n    </div>\\n\\n    <table>\\n        <thead>\\n            <tr>\\n                <th>ID</th>\\n                <th>Name</th>\\n                <th>Price</th>\\n                <th>Date of creation</th>\\n                <th>Open</th>\\n                <th>Delete</th>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr *ngFor=\\\"let product of products | search : productName ; let idx = index\\\">\\n                <td>{{ idx + 1 }}</td>\\n                <td>{{ product.title }}</td>\\n                <td>{{ product.price }}</td>\\n                <td>{{ product.date | date : 'short'}}</td>\\n                <td>\\n                    <button class=\\\"btn btn-dark\\\" [routerLink]=\\\"['/admin','product',product.id,'edit']\\\">Open</button>\\n                </td>\\n                <td>\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"remove(product.id)\\\">Delete</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<ng-template #loading>\\n    <p class=\\\"text-center\\\">Loading...</p>\\n</ng-template>\"","export default \"<div *ngIf=\\\"form; else loading\\\">\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <h2 class=\\\"text-center\\\">Update product</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Type</label>\\n        <select formControlName=\\\"type\\\">\\n            <option value=\\\"Phone\\\">Phone</option>\\n            <option value=\\\"Tablet\\\">Tablet</option>\\n            <option value=\\\"Laptop\\\">Laptop</option>\\n        </select>\\n        <div *ngIf=\\\"form.get('type').touched && form.get('type').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('type').errors.required\\\">Chose product type</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"title\\\">Name</label>\\n        <input id=\\\"title\\\" type=\\\"title\\\" formControlName=\\\"title\\\">\\n        <div *ngIf=\\\"form.get('title').touched && form.get('title').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('title').errors.required\\\">Enter product name</small>\\n        </div>\\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Photo:</label>\\n        <quill-editor formControlName=\\\"photo\\\"></quill-editor>\\n       \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Information:</label>\\n        <quill-editor formControlName=\\\"info\\\"></quill-editor>\\n      \\n    </div>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"price\\\">Price</label>\\n        <input id=\\\"price\\\" type=\\\"price\\\" formControlName=\\\"price\\\">\\n        <div *ngIf=\\\"form.get('price').touched && form.get('price').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('price').errors.required\\\">Enter product price</small>\\n        </div>\\n    </div>\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"form.invalid || submitted\\\">Update</button>\\n    \\n\\n</form>\\n</div>\\n\\n<ng-template #loading>\\n    <p class=\\\"text-center\\\">Loading...</p>\\n</ng-template>\"","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\n\\n    <h2>Login as administrator</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input id=\\\"email\\\" type=\\\"email\\\" formControlName=\\\"email\\\">\\n        <div *ngIf=\\\"form.get('email').touched && form.get('email').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('email').errors.required\\\">Enter Email</small>\\n            <small *ngIf=\\\"form.get('email').errors.email\\\">Enter valid Email</small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input id=\\\"password\\\" type=\\\"password\\\" formControlName=\\\"password\\\">\\n        <div *ngIf=\\\"form.get('password').touched && form.get('password').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('password').errors.required\\\">Enter Password</small>\\n            <small *ngIf=\\\"form.get('password').errors.minlength\\\">\\n                Passwor must be at least  {{form.get('password').errors.minlength.requiredLength}} characters. \\n                Now he {{form.get('password').errors.minlength.actualLength}}\\n            </small>\\n        </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"form.inalid || submitted\\\">Logon</button>\\n    \\n\\n</form>\"","export default \"<div *ngIf=\\\"orders.length; else noOrders\\\">\\n    <h2 class=\\\"text-center\\\">Table of orders:</h2>\\n\\n    <table>\\n        <thead>\\n            <tr>\\n                <th>Date</th>\\n                <th>Phone</th>\\n                <th>Name</th>\\n                <th>Address</th>\\n                <th>Products</th>\\n                <th>Price</th>\\n                <th>Status</th>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr *ngFor=\\\"let order of orders\\\">\\n                <td>{{ order.date | date : 'medium' }}</td>\\n                <td>{{ order.phone }}</td>\\n                <td>{{ order.name }}</td>\\n                <td>{{ order.address }}</td>\\n                <td>\\n                    <div *ngFor=\\\"let product of order.orders\\\">{{ product.title }}</div>\\n                </td>\\n                <td>\\n                    <div class=\\\"text-center\\\">{{ order.price }}$</div>\\n                    <div class=\\\"text-center\\\">{{ order.payment }}</div>\\n                </td>\\n                <td>\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"remove(order.id)\\\">Complited</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<ng-template #noOrders>\\n    <p class=\\\"text-center\\\">No orders...</p>\\n</ng-template>\"","export default \"<nav class=\\\"navbar bg-dark\\\">\\n    <h1>\\n        <a routerLink=\\\"/\\\">Online Shop</a>\\n    </h1>\\n\\n    <ul *ngIf=\\\"auth.isAuthenticated(); else login\\\">\\n        <li routerLinkActive=\\\"active\\\">\\n            <a [routerLink]=\\\"['/admin','dashboard']\\\">Dashboard</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n            <a [routerLink]=\\\"['/admin','add']\\\">Add product</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n            <a [routerLink]=\\\"['/admin','orders']\\\">Orders</a>\\n        </li>\\n        <li routerLinkActive=\\\"active\\\">\\n            <a href=\\\"#\\\" (click)=\\\"logout($event)\\\">Logout</a>\\n        </li>\\n    </ul>\\n\\n    <ng-template #login>\\n        <ul>\\n            <li routerLinkActive=\\\"active\\\">\\n                <a [routerLink]=\\\"['/admin','login']\\\">Login</a>\\n            </li>\\n        </ul>\\n    </ng-template>\\n\\n</nav>\\n\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkZC1wYWdlL2FkZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-page',\n  templateUrl: './add-page.component.html',\n  styleUrls: ['./add-page.component.scss']\n})\nexport class AddPageComponent implements OnInit {\n\n  form: FormGroup\n  submitted = false\n\n  constructor(\n    private productServ: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      type: new FormControl(null, Validators.required),\n      title: new FormControl(null, Validators.required),\n      photo: new FormControl(null, Validators.required),\n      info: new FormControl(null, Validators.required),\n      price: new FormControl(null, Validators.required),\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    const product = {\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }\n\n    console.log(this.form)\n    this.productServ.create(product).subscribe( res => {\n      this.form.reset()\n      this.submitted = false\n      this.router.navigate(['/'])\n    })\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminLayoutComponent } from './shared/admin-layout/admin-layout.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { DashboardPageComponent } from './dashboard-page/dashboard-page.component';\r\nimport { AddPageComponent } from './add-page/add-page.component';\r\nimport { OrdersPageComponent } from './orders-page/orders-page.component';\r\nimport { EditPageComponent } from './edit-page/edit-page.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { AuthGuard } from '../shared/auth.guard';\r\nimport { QuillModule } from 'ngx-quill'\r\nimport { SearchPipe } from '../shared/search.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminLayoutComponent,\r\n        LoginPageComponent,\r\n        DashboardPageComponent,\r\n        AddPageComponent,\r\n        EditPageComponent,\r\n        OrdersPageComponent,\r\n        SearchPipe,\r\n\r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        QuillModule.forRoot(),\r\n        RouterModule.forChild([\r\n            {\r\n                path: '', component: AdminLayoutComponent, children: [\r\n                    {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n                    {path: 'login', component: LoginPageComponent},\r\n                    {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'add', component: AddPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'orders', component: OrdersPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n                ]\r\n            }\r\n        ])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AdminModule{\r\n    \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC1wYWdlL2Rhc2hib2FyZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit {\n\n  products = []\n  pSub: Subscription\n  rSub: Subscription;\n  productName;\n\n  constructor(\n    private productServ: ProductService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.productServ.getAll().subscribe( products => {\n      console.log(products)\n      this.products = products\n    })\n  }\n\n  ngOnDesroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe()\n    }\n\n    if (this.rSub) {\n      this.rSub.unsubscribe()\n    }\n  }\n\n  remove (id) {\n    this.rSub = this.productServ.remove(id).subscribe( () => {\n      this.products = this.products.filter( product => product.id !== id)\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2VkaXQtcGFnZS9lZGl0LXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from 'src/app/shared/product.service';\nimport { switchMap } from 'rxjs/operators';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Product } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.scss']\n})\nexport class EditPageComponent implements OnInit {\n\n  form : FormGroup\n  product: Product\n  submitted = false\n\n  constructor(\n    private route: ActivatedRoute,\n    private productServ: ProductService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.params.pipe(\n      switchMap( params => {\n        return this.productServ.getById(params['id'])\n      })\n    ).subscribe(product => {\n      this.product = product\n      this.form = new FormGroup({\n        type: new FormControl(this.product.type, Validators.required),\n      title: new FormControl(this.product.title, Validators.required),\n      photo: new FormControl(this.product.photo, Validators.required),\n      info: new FormControl(this.product.info, Validators.required),\n      price: new FormControl(this.product.price, Validators.required),\n      })\n\n    })\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return\n    }\n\n    this.submitted = true\n\n    this.productServ.update({\n      ...this.product,\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }).subscribe( res => {\n      this.submitted = false\n      this.router.navigate(['/admin','dashboard'])\n    })\n  }\n}\n","export default \"form {\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vbG9naW4tcGFnZS9EOlxcQW5ndWxhX2FwcFxcMVxcT25saW5lLXNob3Avc3JjXFxhcHBcXGFkbWluXFxsb2dpbi1wYWdlXFxsb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hZG1pbi9sb2dpbi1wYWdlL2xvZ2luLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtFQUNBLGNBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xyXG4gICAgbWF4LXdpZHRoOiA2MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59IiwiZm9ybSB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  form: FormGroup;\n  submitted = false;\n\n  constructor(\n    public auth: AuthService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\n     });\n  }\n\n  submit() {\n    if (  this.form.invalid ) {\n      return;\n    }\n\n    this.submitted = true;\n\n    const user = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    };\n\n    this.auth.login(user).subscribe( res => {\n      console.log(res);\n      this.form.reset;\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n\n    }, () => {\n      this.submitted = false;\n    }\n\n    );\n\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL29yZGVycy1wYWdlL29yZGVycy1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { OrderService } from 'src/app/shared/order.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-orders-page',\n  templateUrl: './orders-page.component.html',\n  styleUrls: ['./orders-page.component.scss']\n})\nexport class OrdersPageComponent implements OnInit {\n\n  orders = []\n  pSub: Subscription\n  rSub: Subscription\n\n\n  constructor(\n    private orderServ: OrderService\n  ) { }\n\n  ngOnInit() {\n    this.pSub = this.orderServ.getAll().subscribe( orders => {\n      this.orders = orders\n    })\n  }\n\n  ngOnDesroy() {\n    if (this.pSub) {\n      this.pSub.unsubscribe()\n    }\n\n    if (this.rSub) {\n      this.rSub.unsubscribe()\n    }\n  }\n\n  remove (id) {\n    this.rSub = this.orderServ.remove(id).subscribe( () => {\n      this.orders = this.orders.filter( order => order.id !== id)\n    })\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NoYXJlZC9hZG1pbi1sYXlvdXQvYWRtaW4tbGF5b3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/shared/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor(\n    public auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout($event) {\n    event.preventDefault()\n    this.auth.logout()\n    this.router.navigate(['/admin','login'])\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.auth.isAuthenticated()) {\n      return true;\n    } else {\n      this.auth.logout()\n      this.router.navigate(['/admin', 'login'])\n    }\n     \n  }\n  \n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Product } from './interfaces';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(products: Product[], productName = ''): any {\n    if (!productName.trim()) {\n      return products\n    }\n\n    return products.filter( product => {\n      return product.title.toLowerCase().includes(productName.toLowerCase())\n    })\n  }\n\n}\n"],"sourceRoot":"webpack:///"}